"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
from dotenv import load_dotenv
import os

load_dotenv()


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-pj-*m$di8f2h-j-u+4s5-l^hq14j#dv_0100k1ufp7_%wr=3o$'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'oauth2_provider',
    'social_django',
    'drf_social_oauth2',
    'corsheaders',
    'users',
    'subscription',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',  # add
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # for social auth
                "social_django.context_processors.backends",
                "social_django.context_processors.login_redirect",
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# REST_FRAMEWORK = {
#     'DEFAULT_AUTHENTICATION_CLASSES': [
#         'rest_framework_simplejwt.authentication.JWTAuthentication',
#     ],
# }

from datetime import timedelta

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=15),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
    'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': True,
}

CORS_ALLOWED_ORIGINS = [
    "http://localhost:5173",
]

TEMPLATE_CONTEXT_PROCESSORS = (
    'social_django.context_processors.backends',
    'social_django.context_processors.login_redirect',
)

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        # 'oauth2_provider.ext.rest_framework.OAuth2Authentication',  # django-oauth-toolkit < 1.0.0
        'oauth2_provider.contrib.rest_framework.OAuth2Authentication',  # django-oauth-toolkit >= 1.0.0
        'drf_social_oauth2.authentication.SocialAuthentication',
    ),
}



AUTHENTICATION_BACKENDS = (
    # Google OAuth2
    'social_core.backends.google.GoogleOAuth2',

    # drf-social-oauth2
    'drf_social_oauth2.backends.DjangoOAuth2',

    # Django
    'django.contrib.auth.backends.ModelBackend',
)

SOCIAL_AUTH_GOOGLE_OAUTH2_SCOPE = [
    'https://www.googleapis.com/auth/userinfo.email',
    'https://www.googleapis.com/auth/userinfo.profile',
]

SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = os.environ.get("SOCIAL_AUTH_GOOGLE_OAUTH2_KEY")
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = os.environ.get("SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET")

STRIPE_PRO_SUBSCRIPTION_MONTHLY = os.environ.get(
    "STRIPE_PRO_SUBSCRIPTION_MONTHLY", default="price_1QzWk2Bld7c7zRyo79LZbO2l"
)

STRIPE_PRO_50_SUBSCRIPTION_MONTHLY = os.environ.get(
    "STRIPE_PRO_50_SUBSCRIPTION_MONTHLY", default="price_1QzX4yBld7c7zRyoJ6dh0GTO"
)

STRIPE_PRO_100_SUBSCRIPTION_MONTHLY = os.environ.get(
    "STRIPE_PRO_100_SUBSCRIPTION_MONTHLY", default="price_1QzX5ZBld7c7zRyoIOmiDUh7"
)

STRIPE_PRO_200_SUBSCRIPTION_MONTHLY = os.environ.get(
    "STRIPE_PRO_200_SUBSCRIPTION_MONTHLY", default="price_1QzX6gBld7c7zRyod9pIFNAm"
)

STRIPE_PRO_SUBSCRIPTION_MONTHLY_PRICING = {
    "price": STRIPE_PRO_SUBSCRIPTION_MONTHLY,
    "quantity": 1,
}

STRIPE_PRO_50_SUBSCRIPTION_MONTHLY_PRICING = {
    "price": STRIPE_PRO_50_SUBSCRIPTION_MONTHLY,
    "quantity": 1,
}

STRIPE_PRO_100_SUBSCRIPTION_MONTHLY_PRICING = {
    "price": STRIPE_PRO_100_SUBSCRIPTION_MONTHLY,
    "quantity": 1,
}

STRIPE_PRO_200_SUBSCRIPTION_MONTHLY_PRICING = {
    "price": STRIPE_PRO_200_SUBSCRIPTION_MONTHLY,
    "quantity": 1,
}

STRIPE_SUCCESS_URL = os.environ.get("STRIPE_SUCCESS_URL", default="https://dev.codequik.net")
STRIPE_CANCEL_URL = os.environ.get("STRIPE_SUCCESS_URL", default="https://dev.codequik.net")

STRIPE_SECRET_KEY = os.environ.get("STRIPE_SECRET_KEY", default="sk_test_51PNWpDBld7c7zRyojkuiogUHdGAm71dm01vCVs5vLb6lUIq2hUb75FOetDeYF5PVcZosungflo7yrbqiD8Yc09qb00tDyVWgvw")
STRIPE_PUBLIC_KEY = os.environ.get("STRIPE_PUBLIC_KEY", default="pk_test_51PNWpDBld7c7zRyon33C4JoOheAQgDAYCF6RkdO5hIbfkXvpfQuWZ19cLul5DIUvrrCI8Kg5wlUb1IGgxi5GQyk500iYcq2wZU")

STRIPE_ENDPOINT_SECRET = os.environ.get(
    "STRIPE_ENDPOINT_SECRET",
    default="whsec_2503c03e664ad859c62b28256860e914a08c9c733444a835b9331e1a8a1d1944",
)
